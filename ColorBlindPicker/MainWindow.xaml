<Window x:Class="ColorBlindPicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:viewmodels="clr-namespace:ColorBlindPicker.ApplicationLayer.ViewModels" 
        xmlns:converters="clr-namespace:ColorBlindPicker.Converters" 
        WindowStyle="None" ResizeMode="NoResize" Loaded="Window_Loaded" AllowsTransparency="True"
        Title="Color Blind Picker" Height="auto" Width="350" SizeToContent="Height" Background="Transparent"
        Topmost="{Binding AlwaysOnTop, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
    <Window.DataContext>
        <viewmodels:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Window.Resources>
    
    <Border Background="#5f5f5f" CornerRadius="15" MouseLeftButtonDown="DragMove" BorderBrush="#202020" >
        <Grid>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <TextBlock x:Name="TxtColor" Text="{Binding HslColor.ColorDescription, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Foreground="White" FontSize="15" FontWeight="Bold" VerticalAlignment="Center" Margin="10 0"/>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Border x:Name="Quadrato" Grid.Column="0" Margin="5" Background="red" CornerRadius="15"/>

                <ToggleButton x:Name="bntHistory" Grid.Column="2" Margin="5 5 2.5 5" IsChecked="{Binding ViewHistory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}" >
                            <Border x:Name="br" CornerRadius="15">
                                <Image x:Name="img" Margin="10" Source="{DynamicResource HistoryIcon}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="br" Property="Background" Value="#202020" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>

                <ToggleButton x:Name="bntColorPicker" Grid.Column="3" Margin="2.5 5" IsChecked="{Binding PickColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}" >
                            <Border x:Name="br" CornerRadius="15">
                                <Image x:Name="img" Margin="10" Source="{DynamicResource ColorPickerIcon}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="br" Property="Background" Value="#202020" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>

                <ToggleButton x:Name="bntAlwaysOnTop" Grid.Column="4" Margin="2.5 5 5 5" IsChecked="{Binding AlwaysOnTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}" >
                            <Border x:Name="br" CornerRadius="15">
                                <Image x:Name="img" Margin="10" Source="{DynamicResource PinIconFill}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="br" Property="Background" Value="#202020" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>

                <Grid Grid.Column="1" Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel VerticalAlignment="Center" Grid.Row="0" Orientation="Horizontal">
                        <TextBlock Text="hex: #" Foreground="White" FontWeight="Bold"/>
                        <TextBlock x:Name="TxtRGB" Text="{Binding Color.Name, UpdateSourceTrigger=PropertyChanged}" Foreground="White" FontWeight="Bold"/>
                    </StackPanel>

                    <StackPanel VerticalAlignment="Center" Grid.Row="1" Orientation="Horizontal">
                        <TextBlock Text="H:"/>
                        <TextBlock x:Name="txtHSL_H"  Text="{Binding HslColor.Hue, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                        <TextBlock Text="  L:"/>
                        <TextBlock x:Name="txtHSL_S"  Text="{Binding HslColor.Lightness, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                        <TextBlock Text="  S:"/>
                        <TextBlock x:Name="txtHSL_L"  Text="{Binding HslColor.Saturation, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                    </StackPanel>
                </Grid>
            </Grid>

            <Grid Grid.Row="2" Height="200" Visibility="{Binding ViewHistory, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}">
                <ListBox ItemsSource="{Binding FileService.Colors, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    
                </ListBox>
            </Grid>
        </Grid>
        
        
     
    </Border>
</Window>
